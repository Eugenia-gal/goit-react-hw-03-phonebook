{"version":3,"sources":["Components/Container/Container.styled.jsx","Components/Container/Container.jsx","Components/Form/Form.styled.jsx","Components/Form/Form.jsx","Components/ContactList/ContactList.styled.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js"],"names":["CustomContainer","Container","children","CustomForm","initialState","name","number","Form","state","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","this","htmlFor","type","id","pattern","title","required","onChange","Component","CustomContactList","ListContactEl","ContactList","contacts","onDeleteContact","map","contact","onClick","FilterContainer","customId","shortid","generate","Filter","App","initialContacts","filter","addContact","data","newContact","indexOf","alert","oldState","deleteContact","filterContacts","normalizedFilter","toLowerCase","visibleContacts","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mkBAEA,IAIeA,EAJM,gF,OCUNC,MARf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,cAAC,EAAD,UAAkBA,KCH3B,IAgBeC,EAhBC,8LCEVC,EAAe,CAAEC,KAAM,GAAIC,OAAQ,IAuD1BC,EArDf,4MACEC,MAAQJ,EADV,EAGEK,aAAe,SAAAC,GACb,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACGR,EAAOO,KAPd,EAWEE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKT,OACzB,EAAKK,SAAST,IAdlB,4CAiBE,WACE,OACE,eAAC,EAAD,CAAYa,SAAUC,KAAKJ,aAA3B,UACE,uBAAOK,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLf,KAAK,OACLgB,GAAG,OACHC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRZ,MAAOM,KAAKV,MAAMH,KAClBoB,SAAUP,KAAKT,eAEjB,uBAAOU,QAAQ,SAAf,mBAEA,uBACEC,KAAK,OACLf,KAAK,SACLgB,GAAG,SACHC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRZ,MAAOM,KAAKV,MAAMF,OAClBmB,SAAUP,KAAKT,eAEjB,wBAAQW,KAAK,SAAb,gCA3CR,GAA0BM,a,gBCJ1B,IAMeC,EANQ,gHCGvB,IAAMC,EAAa,oJAoCJC,MA5Bf,YAAqD,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,gBAC/B,OACE,cAAC,EAAD,UACGD,EAASE,KAAI,SAAAC,GAAO,OACnB,eAACL,EAAD,WACE,iCACGK,EAAQ5B,KADX,KACmB4B,EAAQ3B,UAE3B,wBAAQc,KAAK,SAASc,QAAS,kBAAMH,EAAgBE,EAAQZ,KAA7D,sBAJkBY,EAAQZ,UCfpC,IAOec,EAPM,sICGfC,EAAWC,IAAQC,WAuBVC,MArBf,YAAsC,IAApB3B,EAAmB,EAAnBA,MAAOa,EAAY,EAAZA,SACvB,OACE,cAAC,EAAD,UACE,yDAEE,uBACEJ,GAAIe,EACJxB,MAAOA,EACPa,SAAUA,EACVpB,KAAK,iB,QCiDAmC,E,4MAvDbhC,MAAQ,CACNsB,SAAUW,EACVC,OAAQ,I,EAGVC,WAAa,SAAAC,GACX,IAAQd,EAAa,EAAKtB,MAAlBsB,SACFe,EAAU,aAAKxB,GAAIgB,IAAQC,YAAeM,IAEM,IADjCd,EAASE,KAAI,SAAAC,GAAO,OAAIA,EAAQ5B,QACvByC,QAAQF,EAAKvC,MAGzC0C,MAAM,GAAD,OAAIH,EAAKvC,KAAT,4BAGL,EAAKQ,UAAS,SAAAmC,GAAQ,MAAK,CACzBlB,SAAS,CAAEe,GAAH,mBAAkBG,EAASlB,gB,EAKzCmB,cAAgB,SAAA5B,GACd,EAAKR,UAAS,SAAAmC,GAAQ,MAAK,CACzBlB,SAAUkB,EAASlB,SAASY,QAAO,SAAAT,GAAO,OAAIA,EAAQZ,KAAOA,U,EAIjE6B,eAAiB,SAAAxC,GACf,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACd,EAAKC,SAAL,eACGR,EAAOO,K,4CAIZ,WACE,IAAMuC,EAAmBjC,KAAKV,MAAMkC,OAAOU,cACrCC,EAAkBnC,KAAKV,MAAMsB,SAASY,QAAO,SAAAT,GAAO,OACxDA,EAAQ5B,KAAK+C,cAAcE,SAASH,MAGtC,OACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,CAAMlC,SAAUC,KAAKyB,aACrB,0CACA,cAAC,EAAD,CAAQ/B,MAAOM,KAAKV,MAAMkC,OAAQjB,SAAUP,KAAKgC,iBACjD,cAAC,EAAD,CACEpB,SAAUuB,EACVtB,gBAAiBb,KAAK+B,uB,GAjDdvB,aCGH6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.18780241.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\r\n\r\nconst CustomContainer = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nexport default CustomContainer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CustomContainer from 'Components/Container/Container.styled';\r\n\r\nfunction Container({ children }) {\r\n  return <CustomContainer>{children}</CustomContainer>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nconst CustomForm = styled.form`\r\n  border: 2px solid black;\r\n  border-radius: 3px;\r\n  padding: 10px;\r\n  width: 300px;\r\n\r\n  & button {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  & label,\r\n  input {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport default CustomForm;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CustomForm from './Form.styled';\r\n\r\nconst initialState = { name: '', number: '' };\r\n\r\nexport class Form extends Component {\r\n  state = initialState;\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.setState(initialState);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <CustomForm onSubmit={this.handleSubmit}>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n        />\r\n        <label htmlFor=\"number\">Phone</label>\r\n\r\n        <input\r\n          type=\"text\"\r\n          name=\"number\"\r\n          id=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n        />\r\n        <button type=\"submit\">Add Contact</button>\r\n      </CustomForm>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nconst CustomContactList = styled.ul`\r\n  padding: 10px;\r\n  width: 300px;\r\n  list-style-type: square;\r\n`;\r\n\r\nexport default CustomContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled/macro';\r\nimport CustomContactList from './ContactList.styled';\r\n\r\nconst ListContactEl = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <CustomContactList>\r\n      {contacts.map(contact => (\r\n        <ListContactEl key={contact.id}>\r\n          <span>\r\n            {contact.name}: {contact.number}\r\n          </span>\r\n          <button type=\"button\" onClick={() => onDeleteContact(contact.id)}>\r\n            Delete\r\n          </button>\r\n        </ListContactEl>\r\n      ))}\r\n    </CustomContactList>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nconst FilterContainer = styled.div`\r\n  border: 1px dashed black;\r\n  padding: 10px;\r\n  width: 300px;\r\n  border-radius: 3px;\r\n`;\r\n\r\nexport default FilterContainer;\r\n","import React from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\nimport FilterContainer from './Filter.styled';\r\n\r\nconst customId = shortid.generate();\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <FilterContainer>\r\n      <label>\r\n        Find contact by name\r\n        <input\r\n          id={customId}\r\n          value={value}\r\n          onChange={onChange}\r\n          name=\"filter\"\r\n        ></input>\r\n      </label>\r\n    </FilterContainer>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Container from 'Components/Container';\nimport Form from 'Components/Form';\nimport shortid from 'shortid';\nimport ContactList from 'Components/ContactList';\nimport Filter from 'Components/Filter';\nimport initialContacts from 'Data/contacts.json';\n\nclass App extends Component {\n  state = {\n    contacts: initialContacts,\n    filter: '',\n  };\n\n  addContact = data => {\n    const { contacts } = this.state;\n    const newContact = { id: shortid.generate(), ...data };\n    const contactNames = contacts.map(contact => contact.name);\n    const isRepeat = contactNames.indexOf(data.name) !== -1;\n\n    if (isRepeat) {\n      alert(`${data.name} is already in Contacts`);\n      return;\n    } else {\n      this.setState(oldState => ({\n        contacts: [newContact, ...oldState.contacts],\n      }));\n    }\n  };\n\n  deleteContact = id => {\n    this.setState(oldState => ({\n      contacts: oldState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  filterContacts = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const visibleContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.filterContacts} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}